大家好，这里是小红猪Ethan的日常心得和笔记，分享工作学习过程中遇到的值得记录的数据相关SQL，JAVA算法题等。　

这是第一期。

本期题目：

user_id | data1
0 | 6
0 | 6
0 | 6
0 | 1
0 | 1
0 | 2
1 | 5
1 | 5
1 | 3
1 | 3
1 | 3
1 | 7

我们期望得到这样的结果：

user_id | most_frequent_value
0 | 6
1 | 3

第一种直观的方法：

select distinct on (user_id) user_id, most_frequent_value from (
SELECT user_id, data1 AS most_frequent_value, count(*) as _count
FROM my_table
GROUP BY user_id, data1) a
ORDER BY user_id, _count DESC

解释：这里使用subquery，相当于将两个列（user_id, data1）连结在一起，类似concat的功能，然后进行排序。

第二种方法：

SELECT DISTINCT t1.user_id, (

SELECT data1

FROM my_table t2

WHERE t1.user_id = t2.user_id

GROUP BY data1

ORDER BY count(*) desc

LIMIT 1) as data1

FROM my_table t1

这是另一种subquery的方法，更方便理解一些，将user id和data1分开来考虑，这里一个常用的方法是将一个数据表与本身进行merge，从而得到最频繁的结果。

欢迎大家讨论其他更高效的解法，如果有什么错误或建议，欢迎指出，谢谢！
